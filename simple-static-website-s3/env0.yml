version: 2

deploy:
  steps:
    setupVariables:
      after:
        - name: ServiceNow Update - Clone Finished
          run: |
            https://devopsenv0.service-now.com/api/sn_devops/devops/tool/orchestration?toolId=env0
            {
            "taskExecution": {
                  "toolId": "{tool_id}",
                  "buildNumber": "{deployment_id}",
                  "nativeId": "{environment_name}#{step_name}/{deployment_id}",
                  "name": "{environment_name}#{step_name}/{deployment_id}",
                  "id": "{environment_name}#{step_name}/{deployment_id}",
                  "url": "{base_env0_url}/p/{project_id}/environments/{environment_id}/deployments/{deployment_id}#{step_name}",
                  "isMultiBranch": "false",
                  "branchName": "",
                  "pipelineExecutionUrl": "{env0_api_url}/p/{project_id}/environments/{environment_id}/deployments/{deployment_id}",
                  "orchestrationTaskUrl": "{env0_api_url}/p/{project_id}/environments/{environment_id}/{step_name}",
                  "orchestrationTaskName": "{environment_name}#{step_name}",
                  "result": "building",
                  "startDateTime": "YYYY-MM-DD hh:mm:ss",
                  "upstreamTaskUrl": "{env0_api_url}/p/{project_id}/environments/{environment_id}/deployments/{deployment_id}#{upstream_step_name}",
                  "upstreamId": "{environment_name}#{upstream_step_name}"
                },
                "orchestrationTask": {
                  "orchestrationTaskURL": "{env0_api_url}/p/{project_id}/environments/{environment_id}/{step_name}",
                  "orchestrationTaskName": "{environment_name}#{step_name}",
                  "branchName": "",
                  "toolId": "{tool_id}"
                }

    terraformInit:
      before:
        - pwd
        - aws sts get-caller-identity
        - echo "Replacing !!!USER!!! with $USER in index.html"
        - sed 's/!!!USER!!!/'"$USER"'/g' index.template.html > index.html
    terraformPlan:
      before:
        - /opt/terratag -tags="{\"env0_workspace_name\":\"$ENV0_WORKSPACE_NAME\",\"org_name\":\"$ORG_NAME\"}" -rename=false

    #     - echo "Infracost Usage Estimate"
    #     - infracost diff -p .tf-plan --usage-file infracost-usage.yml
    # terraformPlan:
    #   after:
    #     - terraform show -json .tf-plan > tf-plan.json
    #     - echo "OPA Check"
    #     - ./opa eval --fail-defined "data.terraform.validation.violations[msg]" --input tf-plan.json --data ./tf-lib.rego --data ./validation.rego --format values 1>&2